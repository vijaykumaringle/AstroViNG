{"version":3,"sources":["components/Apd.jsx","components/Mrp.jsx","components/Neo.jsx","components/InsightMarsWeather.jsx","App.js","reportWebVitals.js","index.js"],"names":["api_nasa","Apd","props","state","error","isLoaded","items","fetch","then","res","json","result","setState","console","log","this","message","className","media_type","src","url","alt","title","copyright","date","explanation","Component","Mrp","images","mrp_sol","mrp_rover","photos","Arr_images","map","item","index","push","original","img_src","thumbnail","originalTitle","rover","name","camera","id","event","target","value","api_key","getData","thumbnailPosition","width","onChange","onChangeInput","bind","type","onClick","onBtnClick","createTheme","text","primary","secondary","background","default","context","divider","action","button","hover","disabled","Neo","columns","selector","sortable","cell","row","style","fontWeight","color","rel","href","close_approach_date","fontSize","relative_velocity","miss_distance","customStyles","rows","minHeight","headCells","paddingLeft","paddingRight","cells","Arr_neo_data","neo_start_date","Date","toISOString","slice","neo_end_date","near_earth_objects","Arr_neo","nasa_jpl_url","absolute_magnitude_h","estimated_diameter","meters","estimated_diameter_min","toFixed","estimated_diameter_max","is_potentially_hazardous_asteroid","close_approach_data","parseFloat","kilometers_per_hour","kilometers","data","theme","InsightMarsWeather","App","selectedComp","checkNav","display","textShadow","onClickCompLoad","renderComp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66e8c4f9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\n//API data\r\nconst api_nasa = {\r\n    \"API_Name\": \"NASA\",\r\n    \"API_key\": \"mSHnvBrnNo5NpCjqSlw1jfcnEYpayjyebBsWPB8C\"\r\n}\r\n\r\nexport class Apd extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        };\r\n    }\r\n\r\n    //get AOD method\r\n    componentDidMount() {\r\n        fetch(`https://api.nasa.gov/planetary/apod?api_key=${api_nasa.API_key}`).then(res => res.json()).then((result) => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                items: result\r\n            });\r\n            console.log(result);\r\n        },\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            return (\r\n                <div className=\"apd_container\">\r\n                    <div className=\"grid-item apd_title\">\r\n                        <h2>Astronomy Pic of the day</h2>\r\n                    </div>\r\n                        <div className=\"grid-item apd_img_div\">\r\n                            {items.media_type !== \"video\" ? <img src={items ? items.url : \"#\"} className=\"Apd_img\" alt=\"apd\" /> : <iframe className=\"Apd_vid\" title={items.title} src={items.url}></iframe>}\r\n                        </div>\r\n                        <div className=\"grid-item Apd_data\">\r\n                            <p>\r\n                            <b>Title:</b>  {items.title} \r\n                            <br/>\r\n                            <b> Author &copy;:</b> {items.copyright ? items.copyright :\"Public domain Image\"}\r\n                            <br/>\r\n                            <b> Date:</b> {items.date}\r\n                            </p>\r\n                            <p>\r\n                            <b> Explanation:</b><br/><span className=\"apd-para\"> \"{items.explanation}\" </span>\r\n                            </p>\r\n                        </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Apd\r\n","import React, { Component } from 'react'\r\n\r\n//imports external components\r\nimport ImageGallery from 'react-image-gallery';\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\n\r\n//API data\r\nconst api_nasa = {\r\n    \"API_Name\": \"NASA\",\r\n    \"API_key\": \"mSHnvBrnNo5NpCjqSlw1jfcnEYpayjyebBsWPB8C\"\r\n}\r\n\r\n\r\nexport class Mrp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: [],\r\n            images: [],\r\n            mrp_sol: 1000,\r\n            mrp_rover: \"Curiosity\"\r\n        };\r\n    }\r\n\r\n    //get Mrp method\r\n    componentDidMount() {\r\n        fetch(`https://api.nasa.gov/mars-photos/api/v1/rovers/${this.state.mrp_rover}/photos?sol=${this.state.mrp_sol}&page=2&api_key=${api_nasa.API_key}`).then(res => res.json()).then((result) => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                items: result.photos\r\n            });\r\n            let Arr_images = [];\r\n            this.state.items.map((item, index) => {\r\n                //return this.state.images.push({original: item.img_src})\r\n                return Arr_images.push({ original: `${item.img_src}`, thumbnail: `${item.img_src}`, originalTitle: `${item.rover.name}_${item.camera.name}_${item.id}` })\r\n            });\r\n            this.setState({\r\n                images: Arr_images\r\n            })\r\n            console.log(result.photos);\r\n        },\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    //onChange input\r\n    onChangeInput(event) {\r\n        if (event.target.id) {\r\n            this.setState({\r\n                [event.target.id]: event.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    //get data method \r\n    getData(mrp_rover, mrp_sol, api_key) {\r\n        fetch(`https://api.nasa.gov/mars-photos/api/v1/rovers/${mrp_rover}/photos?sol=${+mrp_sol}&page=2&api_key=${api_key}`).then(res => res.json()).then((result) => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                items: result.photos\r\n            });\r\n            let Arr_images = [];\r\n            this.state.items.map((item, index) => {\r\n                //return this.state.images.push({original: item.img_src})\r\n                return Arr_images.push({ original: `${item.img_src}`, thumbnail: `${item.img_src}`, originalTitle: `${item.rover.name}_${item.camera.name}_${item.id}` })\r\n            });\r\n            this.setState({\r\n                images: Arr_images\r\n            })\r\n            console.log(result.photos);\r\n        },\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            });\r\n    }\r\n\r\n    //on button click\r\n    onBtnClick(event) {\r\n        if(event.target.id === \"mrp_btn\") {\r\n            this.getData(this.state.mrp_rover, this.state.mrp_sol, api_nasa.API_key)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { error, isLoaded, items, images } = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            return (\r\n                <div className=\"mrp_container\" >\r\n                    <div className=\"grid-item mrp_title\">\r\n                        <h2>Mars Rover Photos</h2>\r\n                    </div>\r\n                    <div className=\"grid-item mrp_img_div\">\r\n                        <ImageGallery items={images} thumbnailPosition=\"left\" />\r\n                    </div>\r\n                    <div className=\"grid-item mrp-input-div\">\r\n                        <div className=\"mrp-input\">\r\n                            <label>Rover: </label>\r\n                            <select value={this.state.mrp_rover} id=\"mrp_rover\" width=\"100px\" onChange={this.onChangeInput.bind(this)}>\r\n                                <option value=\"Curiosity\">Curiosity</option>\r\n                                <option value=\"Opportunity\">Opportunity</option>\r\n                                <option value=\"Spirit\">Spirit</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"mrp-input\">\r\n                            <label>Sol: </label>\r\n                            <input id=\"mrp_sol\" type=\"number\" width=\"100px\" value={this.state.mrp_sol} onChange={this.onChangeInput.bind(this)} />\r\n                        </div>\r\n                        <div className=\"mrp-input\">\r\n                            <button id=\"mrp_btn\" width=\"100px\" onClick={this.onBtnClick}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Mrp","import React, { Component } from 'react'\r\n\r\nimport DataTable, { createTheme } from 'react-data-table-component';\r\n\r\n//API data\r\nconst api_nasa = {\r\n    \"API_Name\": \"NASA\",\r\n    \"API_key\": \"mSHnvBrnNo5NpCjqSlw1jfcnEYpayjyebBsWPB8C\"\r\n}\r\n\r\n//craete theme for data table\r\ncreateTheme('solarized', {\r\n    text: {\r\n      //primary: '#268bd2',\r\n      primary: '#fff',\r\n      secondary: '#2aa198',\r\n    },\r\n    background: {\r\n      //default: '#002b36',\r\n      default: \"#2d3e4a\"\r\n    },\r\n    context: {\r\n      background: '#cb4b16',\r\n      text: '#FFFFFF',\r\n    },\r\n    divider: {\r\n      default: '#073642',\r\n    },\r\n    action: {\r\n      button: 'rgba(0,0,0,.54)',\r\n      hover: 'rgba(0,0,0,.08)',\r\n      disabled: 'rgba(0,0,0,.12)',\r\n    },\r\n  });\r\n\r\n\r\nexport class Neo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: [],\r\n            Arr_neo_data: [],\r\n            neo_start_date: new Date().toISOString().slice(0, 10),\r\n            neo_end_date: new Date().toISOString().slice(0, 10)\r\n        };\r\n    }\r\n\r\n    //get Mrp method\r\n    componentDidMount() {\r\n        fetch(`https://api.nasa.gov/neo/rest/v1/feed?start_date=${this.state.neo_start_date}&end_date=${this.state.neo_end_date}&api_key=${api_nasa.API_key}`).then(res => res.json()).then((result) => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                items: result.near_earth_objects[`${this.state.neo_start_date}`]\r\n            });\r\n            let Arr_neo = [];\r\n            this.state.items.map((item, index) => {\r\n                //return this.state.images.push({original: item.img_src})\r\n                return Arr_neo.push({ \r\n                    id: `${item.id}`,\r\n                    name: `${item.name}`,\r\n                    url: `${item.nasa_jpl_url}`, \r\n                    absolute_magnitude_h: `${item.absolute_magnitude_h}`,\r\n                    estimated_diameter: `${+item.estimated_diameter.meters.estimated_diameter_min.toFixed(2)} m - ${+item.estimated_diameter.meters.estimated_diameter_max.toFixed(2)} m`,\r\n                    is_potentially_hazardous_asteroid: `${item.is_potentially_hazardous_asteroid}`,\r\n                    close_approach_date: `${item.close_approach_data[0].close_approach_date}`,\r\n                    relative_velocity: `${parseFloat(item.close_approach_data[0].relative_velocity.kilometers_per_hour).toFixed(2)}`,\r\n                    miss_distance: `${parseFloat(item.close_approach_data[0].miss_distance.kilometers).toFixed(2)}`,\r\n                 })\r\n            });\r\n            this.setState({\r\n                Arr_neo_data: Arr_neo\r\n            })\r\n            console.log(result.near_earth_objects);\r\n        },\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    onBtnClick(event) {\r\n        console.log(\"Submit Clicked!!\");\r\n        fetch(`https://api.nasa.gov/neo/rest/v1/feed?start_date=${this.state.neo_start_date}&end_date=${this.state.neo_end_date}&api_key=${api_nasa.API_key}`).then(res => res.json()).then((result) => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                items: result.near_earth_objects[`${this.state.neo_start_date}`]\r\n            });\r\n            let Arr_neo = [];\r\n            this.state.items.map((item, index) => {\r\n                //return this.state.images.push({original: item.img_src})\r\n                return Arr_neo.push({ \r\n                    id: `${item.id}`, \r\n                    name: `${item.name}`, \r\n                    url: `${item.nasa_jpl_url}`, \r\n                    absolute_magnitude_h: `${item.absolute_magnitude_h}`,\r\n                    estimated_diameter: `${+item.estimated_diameter.meters.estimated_diameter_min.toFixed(2)}m - ${+item.estimated_diameter.meters.estimated_diameter_max.toFixed(2)}m`,\r\n                    is_potentially_hazardous_asteroid: `${item.is_potentially_hazardous_asteroid}`,\r\n                    close_approach_date: `${item.close_approach_data[0].close_approach_date}`,\r\n                    relative_velocity: `${parseFloat(item.close_approach_data[0].relative_velocity.kilometers_per_hour).toFixed(2)}`,\r\n                    miss_distance: `${parseFloat(item.close_approach_data[0].miss_distance.kilometers).toFixed(2)}`,\r\n                 })\r\n            });\r\n            this.setState({\r\n                Arr_neo_data: Arr_neo\r\n            })\r\n            console.log(result.near_earth_objects);\r\n        },\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            });\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            name: 'ID',\r\n            selector: 'id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Name',\r\n            selector: 'name',\r\n            sortable: true,\r\n            cell: row => <div data-tag=\"allowRowEvents\"><div style={{ fontWeight: \"bold\", color:\"#fff\" }}><a target=\"_blank\" rel=\"noreferrer\" href={`${row.url}`}>{row.name}</a></div></div>,\r\n        },\r\n        {\r\n            name: 'H (mag)',\r\n            selector: 'absolute_magnitude_h',\r\n            sortable: true,\r\n            // right: true,\r\n        },\r\n        {\r\n            name: 'Diameter (m)',\r\n            selector: 'estimated_diameter',\r\n            // sortable: true,\r\n            // right: true,\r\n        },\r\n        {\r\n            name: 'Potential threat?',\r\n            selector: 'is_potentially_hazardous_asteroid',\r\n            sortable: true,\r\n            // right: true,\r\n        },\r\n        {\r\n            name: 'Close Approach',\r\n            selector: 'close_approach_date',\r\n            sortable: true,\r\n            cell: row => <div data-tag=\"allowRowEvents\"><div style={{ fontWeight: \"bold\" }}>{row.close_approach_date}</div><div style={{fontSize: \"10px\"}}>Relative Velocity(kmph): {row.relative_velocity} <br /> Miss Distance(km): {row.miss_distance}</div> </div>,\r\n        },\r\n    ];\r\n\r\n    customStyles = {\r\n        rows: {\r\n            style: {\r\n                minHeight: 'calc(15px + 3vh);', // override the row height\r\n            }\r\n        },\r\n        headCells: {\r\n            style: {\r\n                paddingLeft: '8px', // override the cell padding for head cells\r\n                paddingRight: '8px',\r\n            },\r\n        },\r\n        cells: {\r\n            style: {\r\n                paddingLeft: '8px', // override the cell padding for data cells\r\n                paddingRight: '8px',\r\n            },\r\n        },\r\n    };\r\n    \r\n\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            return (\r\n                <div className=\"mrp_container\" >\r\n                    <div className=\"grid-item mrp_title\">\r\n                        <h2>Near Earth Objects</h2>\r\n                    </div>\r\n                    <div className=\"grid-item mrp_img_div\">\r\n                        <DataTable\r\n                            title=\"Near Earth Objects\"\r\n                            columns={this.columns}\r\n                            customStyles={this.customStyles}\r\n                            data={this.state.Arr_neo_data}\r\n                            theme=\"solarized\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"grid-item mrp-input-div\">\r\n                        <div className=\"mrp-input\">\r\n                            <label>Start date: </label>\r\n                            <input type=\"date\" value={this.state.neo_start_date} id=\"mrp_start_date\"\r\n                                onChange={event => this.setState({ neo_start_date: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mrp-input\">\r\n                            <label>End date: </label>\r\n                            <input id=\"mrp_end_date\" type=\"date\" value={this.state.neo_end_date}\r\n                                onChange={event => this.setState({ neo_end_date: event.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mrp-input\">\r\n                            <button id=\"mrp_btn\" width=\"100px\" onClick={this.onBtnClick.bind(this)}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Neo","import React, { Component } from 'react'\r\n\r\n//API data\r\nconst api_nasa = {\r\n    \"API_Name\": \"NASA\",\r\n    \"API_key\": \"mSHnvBrnNo5NpCjqSlw1jfcnEYpayjyebBsWPB8C\"\r\n}\r\n\r\n\r\nexport class InsightMarsWeather extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: [],\r\n        };\r\n    }\r\n\r\n    //get InsightMarsWeather method\r\n    componentDidMount() {\r\n        fetch(`https://api.nasa.gov/insight_weather/?api_key=${api_nasa.API_key}&feedtype=json&ver=1.0`).then(res => res.json()).then((result) => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                items: result\r\n            });\r\n            // let Arr_images = [];\r\n            // this.state.items.map((item, index) => {\r\n            //     //return this.state.images.push({original: item.img_src})\r\n            //     return Arr_images.push({ original: `${item.img_src}`, thumbnail: `${item.img_src}`, originalTitle: `${item.rover.name}_${item.camera.name}_${item.id}` })\r\n            // });\r\n            // this.setState({\r\n            //     images: Arr_images\r\n            // })\r\n            console.log(result);\r\n        },\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, items, images } = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            return (\r\n                <div className=\"mrp_container\" >\r\n                    <div className=\"grid-item mrp_title\">\r\n                        <h2>Mars Rover Photos</h2>\r\n                    </div>\r\n                    <div className=\"grid-item mrp_img_div\">\r\n                        fdfd\r\n                    </div>\r\n                    <div className=\"grid-item mrp-input-div\">\r\n                        dfs\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default InsightMarsWeather","import React, { Component } from 'react'\nimport './App.css';\n\n//import components\nimport { Apd } from './components/Apd'\nimport { Mrp } from './components/Mrp'\nimport { Neo } from './components/Neo'\nimport { InsightMarsWeather } from './components/InsightMarsWeather'\n\nexport class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedComp: \"Apd\",\n      checkNav: true\n    };\n  }\n\n  //onClick method\n  onClickCompLoad(event) {\n    console.log(event.target.id);\n    this.setState({\n      selectedComp: event.target.id\n    });\n  }\n\n  //renderComp\n  renderComp() {\n    if(this.state.selectedComp === \"Apd\"){\n      return(<Apd/>)\n    } else if(this.state.selectedComp === \"Mrp\"){\n      return(<Mrp/>)\n    } else if(this.state.selectedComp === \"Neo\"){\n      return(<Neo />)\n    } else if(this.state.selectedComp === \"InsightMarsWeather\"){\n      return(<InsightMarsWeather />)\n    } else {\n      return(\"No Comp to display\")\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-logo1\">\n            <span>ViNG Tech</span>\n          </div>\n        <header className=\"App-header\">\n          <div style={{display: 'inline-block', fontSize:'2em', textShadow: '2px 2px 4px #453d3d' }}><span className=\"app-title-astro\">Astro</span><span className=\"app-title-ving\">ViNG</span></div>\n          <div className=\"App-TopNav\">\n            <div className=\"App-TopNav-Section nav-section-col1\">\n              <div id=\"Apd\" className=\"App-TopNav-Item\" onClick={this.onClickCompLoad.bind(this)}>Astronomy Pic of the day</div>\n              <div id=\"Neo\" className=\"App-TopNav-Item\" onClick={this.onClickCompLoad.bind(this)}>Near Earth Object (Neo)</div>\n            {/* </div>\n            <div className=\"App-TopNav-Section nav-section-col2\"> */}\n              <div id=\"Mrp\" className=\"App-TopNav-Item\" onClick={this.onClickCompLoad.bind(this)}>Mars Rover Photos</div>\n              <div id=\"InsightMarsWeather\" className=\"App-TopNav-Item\" onClick={this.onClickCompLoad.bind(this)}>InSight: Mars Weather</div>\n            </div>\n          </div>\n        </header>\n        <div className=\"App-body\">\n          <div style={{width: \"100%\"}}>\n            {/* <Apd /> */}\n            {this.renderComp()}\n          </div>\n        </div>\n        <footer className=\"App-footer\">\n          <a\n            className=\"App-link\"\n            href=\"https://vingtech.in\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            ViNG Tech Home\n          </a>\n          \n          <div className=\"footer-copyright\">\n          &copy;Vijaykumar - ViNG Tech\n          </div>\n        </footer>\n\n      </div>\n    )\n  }\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}